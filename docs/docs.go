// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/chat/{id}/in-message": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Добавляет чат к конкретному сообщению",
                "tags": [
                    "Chats"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/chats": {
            "get": {
                "description": "Возвращает список чатов для конкретного пользователя с указанием черновиков",
                "tags": [
                    "Chats"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтр по имени чата",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.GetChatsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ds.ErrorResp"
                        }
                    }
                }
            }
        },
        "/chats/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает новый чат с указанными данными",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "parameters": [
                    {
                        "description": "Информация о чате",
                        "name": "chat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.ChatRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/chats/{id}": {
            "get": {
                "description": "Возвращает информацию о чате по его ID",
                "tags": [
                    "Chats"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет данные существующего чата",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновленные данные чата",
                        "name": "chat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.ChatRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет чат по его ID и удаляет изображение из Minio",
                "tags": [
                    "Chats"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/chats/{id}/new-image": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Загружает и заменяет изображение чата",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Chats"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Новое изображение для чата",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/message-chats/delete/{message_id}/{chat_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет чат с указанным ID из сообщения с указанным ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message-Chats"
                ],
                "summary": "Удаление чата из сообщения",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сообщения",
                        "name": "message_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "chat_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/message-chats/switch/{message_id}/{chat_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Переключает значение поля \"со звуком\" у чата с указанным ID в сообщении с указанным ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message-Chats"
                ],
                "summary": "Переключение поля \"со звуком\" у чата в сообщении",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сообщения",
                        "name": "message_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "chat_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/messages": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список сообщений, отфильтрованных по статусу и диапазону дат",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Получить отфильтрованные сообщения",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Статус сообщения",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Начальная дата в формате YYYY-MM-DD",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Конечная дата в формате YYYY-MM-DD",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/messages/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает полные данные о сообщении, включая чаты",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Получить сообщение по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сообщения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/messages/{id}/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Устанавливает статус сообщения на \"удалён\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Удалить сообщение",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сообщения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/messages/{id}/finish": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Устанавливает статус сообщения на \"завершён\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Завершить сообщение",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сообщения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/messages/{id}/form": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Устанавливает статус сообщения на \"сформирован\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Сформировать сообщение",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сообщения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/messages/{id}/reject": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Устанавливает статус сообщения на \"отклонён\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Отклонить сообщение",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сообщения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/messages/{id}/text": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет текст сообщения по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Обновить текст сообщения",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сообщения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новый текст сообщения",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.UpdateMessageTextInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/login": {
            "post": {
                "description": "Аутентификация пользователя и создание JWT токена",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.UserRespReq"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет текущую сессию пользователя и завершает сеанс",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Выход из системы",
                "responses": {}
            }
        },
        "/user/reg": {
            "post": {
                "description": "Создает нового пользователя с указанными логином и паролем",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.UserRespReq"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "ds.ChatRequest": {
            "type": "object",
            "properties": {
                "friends": {
                    "type": "integer"
                },
                "info": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "subscribers": {
                    "type": "integer"
                }
            }
        },
        "ds.ChatResponse": {
            "type": "object",
            "properties": {
                "friends": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "subscribers": {
                    "type": "integer"
                }
            }
        },
        "ds.ErrorResp": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "ds.GetChatsResponse": {
            "type": "object",
            "properties": {
                "chats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.ChatResponse"
                    }
                },
                "draft_ID": {
                    "type": "integer"
                },
                "draft_count": {
                    "type": "integer"
                }
            }
        },
        "ds.UpdateMessageTextInput": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "text": {
                    "description": "Обязательное поле текста",
                    "type": "string"
                }
            }
        },
        "ds.UserRespReq": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
