definitions:
  ds.AuthResp:
    properties:
      token:
        type: string
    type: object
  ds.Chat:
    properties:
      friends:
        type: integer
      id:
        type: integer
      img:
        type: string
      info:
        type: string
      isDelete:
        type: boolean
      name:
        type: string
      nickname:
        type: string
      subscribers:
        type: integer
    type: object
  ds.ChatRequest:
    properties:
      friends:
        type: integer
      info:
        type: string
      name:
        type: string
      nickname:
        type: string
      subscribers:
        type: integer
    type: object
  ds.ChatResponse:
    properties:
      friends:
        type: integer
      id:
        type: integer
      img:
        type: string
      info:
        type: string
      name:
        type: string
      nickname:
        type: string
      subscribers:
        type: integer
    type: object
  ds.ChatResponseWithFlags:
    properties:
      friends:
        type: integer
      id:
        type: integer
      img:
        type: string
      info:
        type: string
      is_read:
        type: boolean
      name:
        type: string
      nickname:
        type: string
      sound:
        type: boolean
      subscribers:
        type: integer
    type: object
  ds.ErrorResp:
    properties:
      description:
        type: string
      status:
        type: string
    type: object
  ds.GetChatsResponse:
    properties:
      chats:
        items:
          $ref: '#/definitions/ds.ChatResponse'
        type: array
      draft_ID:
        type: integer
      draft_count:
        type: integer
    type: object
  ds.MessageDetail:
    properties:
      chats:
        items:
          $ref: '#/definitions/ds.ChatResponseWithFlags'
        type: array
      creator:
        type: string
      date_create:
        type: string
      date_finish:
        type: string
      date_update:
        type: string
      id:
        type: integer
      moderator:
        type: string
      status:
        type: string
      text:
        type: string
    type: object
  ds.MessageWithUsers:
    properties:
      creator:
        type: string
      date_create:
        type: string
      date_finish:
        type: string
      date_update:
        type: string
      id:
        type: integer
      moderator:
        type: string
      status:
        type: string
      text:
        type: string
    type: object
  ds.OkResp:
    properties:
      message:
        type: string
    type: object
  ds.UpdateMessageTextInput:
    properties:
      text:
        description: Обязательное поле текста
        type: string
    required:
    - text
    type: object
  ds.UpdateMessageTextResp:
    properties:
      text:
        type: string
    type: object
  ds.UserRegisterReq:
    properties:
      login:
        type: string
      password:
        type: string
      repeat_password:
        type: string
    type: object
  ds.UserRegisterResp:
    properties:
      id:
        type: integer
      is_moderator:
        type: boolean
      login:
        type: string
    type: object
  ds.UserRespReq:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  ds.UserUpdateReq:
    properties:
      current_password:
        type: string
      new_password:
        type: string
    type: object
info:
  contact: {}
paths:
  /chat/{id}/in-message:
    post:
      description: Добавляет чат к конкретному сообщению.
      parameters:
      - description: ID чата
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Сообщение о добавлении чата
          schema:
            $ref: '#/definitions/ds.OkResp'
        "400":
          description: Некорректный ID чата
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Добавить чат в сообщение
      tags:
      - Chats
  /chats:
    get:
      description: Возвращает список чатов для конкретного пользователя с указанием
        черновиков.
      parameters:
      - description: Фильтр по имени чата
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список чатов с черновиками
          schema:
            $ref: '#/definitions/ds.GetChatsResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      tags:
      - Chats
  /chats/{id}:
    delete:
      description: Удаляет чат по его ID и удаляет изображение из Minio.
      parameters:
      - description: ID чата
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Сообщение об успешном удалении
          schema:
            $ref: '#/definitions/ds.OkResp'
        "400":
          description: Некорректный ID чата
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Удалить чат
      tags:
      - Chats
    get:
      description: Возвращает информацию о чате по его ID.
      parameters:
      - description: ID чата
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о чате
          schema:
            $ref: '#/definitions/ds.ChatResponse'
        "400":
          description: Некорректный ID чата
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "404":
          description: Чат не найден
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      summary: Получить чат по ID
      tags:
      - Chats
    put:
      consumes:
      - application/json
      description: Обновляет данные существующего чата.
      parameters:
      - description: ID чата
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные чата
        in: body
        name: chat
        required: true
        schema:
          $ref: '#/definitions/ds.ChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Обновлённый чат
          schema:
            $ref: '#/definitions/ds.Chat'
        "400":
          description: Некорректный ID чата или неверные данные
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Обновить чат
      tags:
      - Chats
  /chats/{id}/new-image:
    post:
      consumes:
      - multipart/form-data
      description: Загружает и заменяет изображение чата.
      parameters:
      - description: ID чата
        in: path
        name: id
        required: true
        type: integer
      - description: Новое изображение для чата
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение об успешной загрузке
          schema:
            $ref: '#/definitions/ds.OkResp'
        "400":
          description: Невалидные данные или неправильный формат файла
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Заменить изображение чата
      tags:
      - Chats
  /chats/create:
    post:
      consumes:
      - application/json
      description: Создает новый чат с указанными данными.
      parameters:
      - description: Информация о чате
        in: body
        name: chat
        required: true
        schema:
          $ref: '#/definitions/ds.ChatRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Созданный чат
          schema:
            $ref: '#/definitions/ds.Chat'
        "400":
          description: Неверные данные или отсутствует имя/никнейм
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Создать новый чат
      tags:
      - Chats
  /message-chats/delete/{message_id}/{chat_id}:
    delete:
      description: Удаляет чат с указанным ID из сообщения с указанным ID.
      parameters:
      - description: ID сообщения
        in: path
        name: message_id
        required: true
        type: integer
      - description: ID чата
        in: path
        name: chat_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение об успешном удалении чата
          schema:
            $ref: '#/definitions/ds.OkResp'
        "400":
          description: Некорректный ID
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Удаление чата из сообщения
      tags:
      - Message-Chats
  /message-chats/switch/{message_id}/{chat_id}:
    put:
      description: Переключает значение поля "со звуком" у чата в сообщении.
      parameters:
      - description: ID сообщения
        in: path
        name: message_id
        required: true
        type: integer
      - description: ID чата
        in: path
        name: chat_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение об успешном изменении значения
          schema:
            $ref: '#/definitions/ds.OkResp'
        "400":
          description: Некорректный ID
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Переключение поля "со звуком"
      tags:
      - Message-Chats
  /messages:
    get:
      consumes:
      - application/json
      description: Возвращает список сообщений, отфильтрованных по статусу и диапазону
        дат.
      parameters:
      - description: Статус сообщения
        in: query
        name: status
        type: string
      - description: Начальная дата (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: Конечная дата (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список сообщений
          schema:
            items:
              $ref: '#/definitions/ds.MessageWithUsers'
            type: array
        "400":
          description: Некорректный формат дат
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Получить отфильтрованные сообщения
      tags:
      - Messages
  /messages/{id}:
    get:
      consumes:
      - application/json
      description: Возвращает полные данные о сообщении, включая чаты.
      parameters:
      - description: ID сообщения
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Детальная информация о сообщении
          schema:
            $ref: '#/definitions/ds.MessageDetail'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Получить сообщение по ID
      tags:
      - Messages
  /messages/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Устанавливает статус сообщения на "удалён".
      parameters:
      - description: ID сообщения
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение об успешном обновлении статуса
          schema:
            $ref: '#/definitions/ds.OkResp'
        "403":
          description: Действие запрещено
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "409":
          description: Конфликт статусов
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Удалить сообщение
      tags:
      - Messages
  /messages/{id}/finish:
    put:
      consumes:
      - application/json
      description: Устанавливает статус сообщения на "завершён".
      parameters:
      - description: ID сообщения
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение об успешном обновлении статуса
          schema:
            $ref: '#/definitions/ds.OkResp'
        "409":
          description: Конфликт статусов
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Завершить сообщение
      tags:
      - Messages
  /messages/{id}/form:
    put:
      consumes:
      - application/json
      description: Устанавливает статус сообщения на "сформирован".
      parameters:
      - description: ID сообщения
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение об успешном обновлении статуса
          schema:
            $ref: '#/definitions/ds.OkResp'
        "400":
          description: Неверный ID сообщения или пустой текст
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "403":
          description: Действие запрещено
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "409":
          description: Конфликт статусов
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Сформировать сообщение
      tags:
      - Messages
  /messages/{id}/reject:
    put:
      consumes:
      - application/json
      description: Устанавливает статус сообщения на "отклонён".
      parameters:
      - description: ID сообщения
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение об успешном обновлении статуса
          schema:
            $ref: '#/definitions/ds.OkResp'
        "409":
          description: Конфликт статусов
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Отклонить сообщение
      tags:
      - Messages
  /messages/{id}/text:
    put:
      consumes:
      - application/json
      description: Обновляет текст сообщения по ID.
      parameters:
      - description: ID сообщения
        in: path
        name: id
        required: true
        type: integer
      - description: Новый текст сообщения
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/ds.UpdateMessageTextInput'
      produces:
      - application/json
      responses:
        "200":
          description: Обновлённый текст
          schema:
            $ref: '#/definitions/ds.UpdateMessageTextResp'
        "400":
          description: Некорректный ID или неверный формат данных
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Обновить текст сообщения
      tags:
      - Messages
  /user/login:
    post:
      consumes:
      - application/json
      description: Аутентификация пользователя и получение JWT-токена.
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/ds.UserRespReq'
      produces:
      - application/json
      responses:
        "200":
          description: Токен JWT
          schema:
            $ref: '#/definitions/ds.AuthResp'
        "400":
          description: Неверный формат данных
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "401":
          description: Неверные учетные данные
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      summary: Вход пользователя
      tags:
      - Auth
  /user/logout:
    post:
      description: Завершение текущей сессии пользователя.
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение о выходе
          schema:
            $ref: '#/definitions/ds.OkResp'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - ApiKeyAuth: []
      summary: Выход из системы
      tags:
      - Auth
  /user/reg:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя с указанными логином и паролем.
      parameters:
      - description: Данные для регистрации пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/ds.UserRegisterReq'
      produces:
      - application/json
      responses:
        "201":
          description: Сообщение об успешной регистрации
          schema:
            $ref: '#/definitions/ds.OkResp'
        "400":
          description: Неверные данные или пароли не совпадают
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "409":
          description: Пользователь уже существует
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      summary: Регистрация пользователя
      tags:
      - Auth
  /user/update:
    put:
      consumes:
      - application/json
      description: Обновляет данные текущего пользователя.
      parameters:
      - description: Новые данные пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/ds.UserUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: Обновлённый пользователь
          schema:
            $ref: '#/definitions/ds.UserRegisterResp'
        "400":
          description: Некорректный формат данных
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/ds.ErrorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/ds.ErrorResp'
      security:
      - BearerAuth: []
      summary: Обновить данные пользователя
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
